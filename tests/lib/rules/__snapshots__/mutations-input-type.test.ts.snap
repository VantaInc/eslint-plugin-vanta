// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Invalid #1 1`] = `
"#### ⌨️ Code

      1 | type Mutation {
      2 |   invalid(arg1: Boolean, arg2: String): bcdPayload
      3 | }

#### ❌ Error

    > 1 | type Mutation {
        | ^^^^^^^^^^^^^^^
    > 2 |   invalid(arg1: Boolean, arg2: String): bcdPayload
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    > 3 | }
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Mutations must take zero or one argument"
`;

exports[`Invalid #2 1`] = `
"#### ⌨️ Code

      1 | type Mutation {
      2 |   invalid(input: [abcInput]): bcdPayload
      3 | }

#### ❌ Error

    > 1 | type Mutation {
        | ^^^^^^^^^^^^^^^
    > 2 |   invalid(input: [abcInput]): bcdPayload
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    > 3 | }
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Mutation input must not be list type"
`;

exports[`Invalid #3 1`] = `
"#### ⌨️ Code

      1 | type Mutation {
      2 |   invalid(input: abcInput): bcdPayload
      3 | }

#### ❌ Error

    > 1 | type Mutation {
        | ^^^^^^^^^^^^^^^
    > 2 |   invalid(input: abcInput): bcdPayload
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    > 3 | }
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Mutation input must be non-nullable"
`;

exports[`Invalid #4 1`] = `
"#### ⌨️ Code

      1 | type Mutation {
      2 |   invalid(arg: abcInput!): bcdPayload
      3 | }

#### ❌ Error

    > 1 | type Mutation {
        | ^^^^^^^^^^^^^^^
    > 2 |   invalid(arg: abcInput!): bcdPayload
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    > 3 | }
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Mutations must take a single argument named input"
`;

exports[`Invalid #5 1`] = `
"#### ⌨️ Code

      1 | type Mutation {
      2 |   invalid(input: abcArgument!): bcdPayload
      3 | }

#### ❌ Error

    > 1 | type Mutation {
        | ^^^^^^^^^^^^^^^
    > 2 |   invalid(input: abcArgument!): bcdPayload
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    > 3 | }
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Mutation input must be a type with suffix \`Input\`"
`;

exports[`Invalid #6 1`] = `
"#### ⌨️ Code

      1 | type Mutation {
      2 |   validMutation(input: validInput!): abcPayload
      3 | }
      4 |
      5 | extend type Mutation {
      6 |   invalidOne(arg1: Boolean, arg2: String): bcdPayload
      7 | }

#### ❌ Error

      4 |
    > 5 | extend type Mutation {
        | ^^^^^^^^^^^^^^^^^^^^^^
    > 6 |   invalidOne(arg1: Boolean, arg2: String): bcdPayload
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    > 7 | }
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Mutations must take zero or one argument"
`;

exports[`Invalid #7 1`] = `
"#### ⌨️ Code

      1 | type Mutation {
      2 |   invalidMutation(input: abcArgument!): abcPayload
      3 | }
      4 |
      5 | extend type Mutation {
      6 |   another(input: bcdInput!, otherInfo: String): bcdPayload
      7 | }

#### ❌ Error 1/2

    > 1 | type Mutation {
        | ^^^^^^^^^^^^^^^
    > 2 |   invalidMutation(input: abcArgument!): abcPayload
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    > 3 | }
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Mutation input must be a type with suffix \`Input\`
      4 |

#### ❌ Error 2/2

      4 |
    > 5 | extend type Mutation {
        | ^^^^^^^^^^^^^^^^^^^^^^
    > 6 |   another(input: bcdInput!, otherInfo: String): bcdPayload
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    > 7 | }
        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Mutations must take zero or one argument"
`;
